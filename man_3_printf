.TH man_3_printf
.SH NAME
.SH DATE: 3rd MARCH 2019
.SH SYNOPSIS
.B #include “holberton.h”
.SH DESCRIPTION
.B This man_3_printf is a file describes how the _printf function executes
.B below is a list of function specifiers that allow our _printf function to
.B print the “character, string, float, integer, octal and hexadecimal values” onto the output screen.
    • We use printf() function with %d format specifier to display the value of an integer  <br/bvariable.
    • Similarly %c is used to display character, %f for float variable, %s for string variable, %lf for double and %x for hexadecimal variable.
    • To generate a newline,we use “\n” in C _printf() statement.
.SH OPTIONS
.br /- c character
.br  The format string is a character string, beginning and ending in its initial shift state, if any.  The format string is composed of zero  or  more  directives: ordinary characters (not %), which are copied unchanged to the output stream; and conversion specifications, each of which results in fetching zero or more subsequent arguments.  Each conversion specification  is  introduced  by  the character %, and ends with a conversion specifier.  In between there may be (in this order) zero or more flags, an optional minimum field width, an optional precision and an optional length modifier.

.B /% A '%' is written.  No argument is converted.  The complete conversion specification is '%%
.BR /- c  -  If no l modifier is present, the int argument is converted to an unsigned char, and the resulting character is written.
.BR /- s is for strings that our _printf uses to check for
.BR /-  i is for integers that our _printf uses to print integers to std output (1)
.BR /-  d i is for integers that our _printf uses to print Decimal integers to std output (1)
.BR /- b: the unsigned int argument is converted to binary
.BR /-X

.TP  Thus,
.I _printf(“%d,%c,%f,%d,%s …, n);
.B AUTHORS

.B[Cynthia Dominguez](https://github.com/cynergist) [Koome Mwiti](https://github.com/komerela)